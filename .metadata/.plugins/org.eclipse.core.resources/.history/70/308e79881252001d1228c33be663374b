package com.vue3shopping.shopping.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import com.vue3shopping.shopping.entity.Cart;
import com.vue3shopping.shopping.entity.Item;
import com.vue3shopping.shopping.repository.CartRepository;
import com.vue3shopping.shopping.repository.ItemRepository;
import com.vue3shopping.shopping.service.JwtService;

@RestController
public class CartController {
	
	@Autowired
	JwtService jwtService;
	
	CartRepository cartRepository;
	
	@PostMapping("/api/cart/items/{itemId}")
	public List<Item> pushCartItem(@PathVariable("itemId") int itemId, @CookieValue(value="token", required = false) String token) {
		
		if(jwtService.isValid(token)) {
			throw new ResponseStatusException(HttpStatus.UNAUTHORIZED);
		}
		
		int memberId = jwtService.getId(token);
		Cart cart = cartRepository.findByMemberIdAndItemId(memberId, itemId);
		
		// cart가 없을 때는 새로운 cart를 추가하는데, 아래 명령어로 memberId, itemId를 인자로 받아서 set으로 세팅해준다.
		if(cart == null) {
			Cart newCart = new Cart();
			newCart.setMemberId(memberId);
			newCart.setItemId(itemId);
			cartRepository.save(newCart);
		}
		
		return cart;		
	}

}
